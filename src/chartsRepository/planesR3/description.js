import FormulaTable from 'utils/formulaTable';
var Latex = require('react-latex');

const description = <div>
  <p>
    <b>Definition</b>: Given <Latex>{"$P$ and $A, B$ in $R_n$"}</Latex>. The set of all points in <Latex>{"$P + sA + tB$, $s, t \\in \\reals$"}</Latex> is a plane which crosses through <Latex>{"$P$"}</Latex> and is parallel to <Latex>{"$sA + tB$"}</Latex>.
  </p>
  <table>
    <thead></thead>
    <tbody>
      <tr>
        <td style={{ paddingRight: 10 }}>1</td>
        <td>
          Two planes <Latex>{"$M_1 = \\{P + sA + tB \\}$"}</Latex> and <Latex>{"$M_2 = \\{P + sC + tD \\}$"}</Latex> which cross through the same <Latex>{"$P$"}</Latex> point are equal if the linear span of <Latex>{"$A$ and $B$"}</Latex> matches with the linear span of <Latex>{"$C$ and $D$"}</Latex>. It can be understood like the "inclination" of the plane defined by the linear combination of those director vectors.
        </td>
      </tr>
      <tr>
        <td>2</td>
        <td>
        Two planes <Latex>{"$M_1 = \\{P + sA + tB \\}$"}</Latex> and <Latex>{"$M_2 = \\{Q + sA + tB \\}$"}</Latex> generated by the same <Latex>{"$A$ and $B$"}</Latex> vectors are equal if <Latex>{"$Q$"}</Latex> is in <Latex>{"$M_1$"}</Latex>. It makes sense due to the fact that if <Latex>{"$Q$"}</Latex> is not in <Latex>{"$M_1$"}</Latex> both planes would be parallel but not equal.
        </td>
      </tr>
      <tr>
        <td>3</td>
        <td>
          Three different points generate two lines. Two lines generate a plane <Latex>{"$M = \\{P + s(Q - P) + t(R - P) \\}$"}</Latex>. Similarly as we did with lines, first we generate the lines which can define the inclination of the plane. And after that we generate the plane. <Latex>{"$C$ and $D$"}</Latex> have to be linearly independent, so the points <Latex>{"$P$, $Q$ and $R$"}</Latex> shouldn't be in the same line.
        </td>
      </tr>
    </tbody>
  </table>

</div>


const miniDescription = <div>
  <p>
    Following the idea exposed with Lines in <Latex>{"$\\Reals^3$"}</Latex>, planes are the <b>sum</b> of <Latex>{"$P$"}</Latex> and the <b>linear span</b> of <Latex>{"$A$ and $B$"}</Latex>, so you can generate the points <Latex>{"$M$ in $\\reals^n$"}</Latex> of a plane with <Latex>{"$M = \\{P + sA + tB | s, t \\in \\reals \\}$"}</Latex>. It is important to remember the Paralelogram law because if we note, giving different values to <Latex>{"$s$ and $t$"}</Latex> you can go over all the possible directions in the plane by  generating different sums of <Latex>{"$A$ and $B$"}</Latex>.
  </p>
  <p>
    The previous idea makes us think and conclude some considerations:
    <ul>
      <li>
        <Latex>{"$A$ and $B$"}</Latex> should be linearly independent to be able to generate different directions after applying the paralelogram law.
      </li>
      <li>
        I we assign values which <Latex>{"$s = t$"}</Latex> we will generate a line.
      </li>
      <li>
        Neither <Latex>{"$A$ nor $B$"}</Latex> must be null vectors.
      </li>
      <li>
        If <Latex>{"$P$"}</Latex> is the origin, the plane is the linear span of <Latex>{"$A$ and $B$"}</Latex>.
      </li>
    </ul>
  </p>
  <p>As we can see in our chart, the infinite points generated by our equation create the plane.</p>
</div>

export { description, miniDescription };
